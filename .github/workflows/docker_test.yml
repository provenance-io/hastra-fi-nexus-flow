name: build-testnet

on:
  push:
    branches:
      - main # Triggers only when code is pushed (including merged PRs) to main
  merge_group:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write

concurrency:
  group: ci-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-testnet:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: us-east1-docker.pkg.dev/provenance-io-test/docker/hastra-fi-nexus-flow
    steps:
      - name: "Announce version"
        run: echo "Building version for ${{ github.ref_name }}"

      - uses: actions/checkout@main

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install npm Packages
        run: |
          if [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi

      - name: Build
        run: node --max-old-space-size=4096 ./node_modules/.bin/tsc -b && node --max-old-space-size=4096 ./node_modules/.bin/vite build --mode test

      - name: Build Version
        id: docker_version
        shell: bash
        run: |
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            echo ::set-output name=branch::${VERSION}
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=testnet-latest
            else
              VERSION="${VERSION}-${{github.run_number}}"
            fi
          elif [[ -n "${GITHUB_HEAD_REF}" ]]; then
            VERSION=$(echo ${GITHUB_HEAD_REF} | sed -r 's#/+#-#g')
            VERSION="${VERSION}-${{github.run_number}}"
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set Up GAR Meta
        uses: docker/metadata-action@v5
        id: set_up_gar_meta
        with:
          images: ${{env.DOCKER_IMAGE}}
          tags: |
            type=ref,event=branch,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=testnet-latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ steps.docker_version.outputs.version }},enable=${{ github.ref != 'refs/heads/main' }}
            type=sha,prefix=git-,priority=1100

      - name: Google GHA Auth
        uses: google-github-actions/auth@v1
        id: gha_auth
        with:
          token_format: access_token
          workload_identity_provider: projects/626568543649/locations/global/workloadIdentityPools/gha-runner-pool/providers/gha-runner-pool-provider
          service_account: gha-runner@provenance-io-test.iam.gserviceaccount.com

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: us-east1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gha_auth.outputs.access_token }}

      - name: Push Docker File
        uses: docker/build-push-action@v6
        id: docker_build_push
        with:
          context: .
          push: true
          file: ./docker/Dockerfile
          tags: ${{ steps.set_up_gar_meta.outputs.tags }}
